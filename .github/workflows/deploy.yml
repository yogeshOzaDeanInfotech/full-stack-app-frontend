name: CI/CD for React App

# 1) Trigger this workflow on every push to "main"
on:
    push:
        branches: [main]

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            # 3) Step: Check out your repository code so we can deploy it
            - name: Checkout
              uses: actions/checkout@v3

            # 4) Step: SSH into your EC2 instance and run provisioning + deploy scripts
            - name: Provision & Deploy on EC2
              uses: appleboy/ssh-action@v0.1.6
              with:
                  # 4a) Which server to connect to (stored as a secret)
                  host: ${{ secrets.EC2_HOST }}

                  # 4b) Which user on that server (Ubuntu AMIs use "ubuntu")
                  username: ubuntu

                  # 4c) SSH private key (stored as a secret, exported from PuTTYgen or OpenSSH)
                  key: ${{ secrets.EC2_SSH_KEY }}

                  # 4d) SSH port (standard is 22)
                  port: 22

                  # 5) The actual shell script to run over SSH
                  script: |
                      cd /react-app
                      git reset --hard origin/main
                      git fetch origin main

                      # Build the multi-stage Docker image defined in your Dockerfile
                      sudo docker build -t react-app:latest .

                      # Stop & remove any old container named "react-app"
                      sudo docker stop react-app
                      sudo docker rm   react-app

                      # Run the new container:
                      # - Name it "react-app"
                      # - Map host port 3000 â†’ container port 80
                      sudo docker run -d \
                        --name react-app \
                        -p 3000:80 \
                        react-app:latest

                      # Clean up any dangling (unused) Docker images
                      sudo docker image prune -f
